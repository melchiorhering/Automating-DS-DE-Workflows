{
    "id": "dd8980f3-3297-427f-8daf-4b46604c5a10",
    "snapshot": "airflow",
    "instruction": "I want to integrate an existing dbt project `dags/dbt/jaffle_shop` into an Airflow DBT task group. The connection to postgresql has been configured. Could you help me finish the other work? Name the target DAG as jaffle_shop_dag, schedule it to run at 10:00 a.m. everyday and activate it. Please implement it with Astro and Cosmos.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nTo integrate the existing dbt project into Airflow. Let's follow these steps:\n1. Click the Visual Studio Code icon on the left application panel.\n2. Click and open the code file with path `dags/jaffle_shop_dag.py`.\n3. In the opened file, type and append the following code into jaffle_shop_dag.py on the right panel:\n```\n... original codes and envs ...\n\nfrom airflow.decorators import dag\nfrom cosmos import DbtTaskGroup, ProjectConfig, ProfileConfig, ExecutionConfig\nfrom cosmos.profiles import PostgresUserPasswordProfileMapping\nfrom pendulum import datetime\n\nprofile_config = ProfileConfig(\n    profile_name=\"default\",\n    target_name=TARGET_NAME,\n    profile_mapping=PostgresUserPasswordProfileMapping(\n        conn_id=CONNECTION_ID,\n        profile_args={\"schema\": SCHEMA_NAME},\n    ),\n)\n\nexecution_config = ExecutionConfig(\n    dbt_executable_path=DBT_EXECUTABLE_PATH,\n)\n\n@dag(\n    start_date=datetime(2024, 1, 1),\n    schedule='0 10 * * *',\n    catchup=False\n)\ndef jaffle_shop_dag():\n    transform_data = DbtTaskGroup(\n        group_id=\"transform_data\",\n        project_config=ProjectConfig(DBT_PROJECT_PATH),\n        profile_config=profile_config,\n        execution_config=execution_config,\n        default_args={\"retries\": 2},\n    )\n\n    transform_data\n\njaffle_shop_dag()\n```\nThese code will create an DbtTaskGroup dag called jaffle_shop_dag.\n4. Press Ctrl+S to save the code file.\n5. Now, we switch to the Astro Web UI page in Chromium/Google Chrome browser.\n6. The target DAG may not appear instantly, we need to refresh the DAGs. Click the refresh button on top of the main table (on the right side of the text `Auto-refresh`) in this Astro UI page.\n7. If the target DAG is still not visible on this page, press hot key \"Ctrl+R\" to refresh the whole web page.\n8. Wait for the reload and we can see a new entry `jaffle_shop_dag` in the main table.\n9. Next, click the button in front of `jaffle_shop_dag` to enable the DAG. The DAG will start to work.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.astronomer.io/learn/airflow-dbt"
    ],
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/dd8980f3-3297-427f-8daf-4b46604c5a10/jaffle_shop_astro.zip",
                "dest": "/home/user/jaffle_shop_astro.zip"
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/dd8980f3-3297-427f-8daf-4b46604c5a10/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "urls": [
                    "https://www.bing.com/"
                ]
            }
        },
        {
            "type": "astro_webui_init",
            "parameters": {
                "url": "http://localhost:8080",
                "listening_port": 9222,
                "actions": [
                    {
                        "type": "login",
                        "username": "admin",
                        "password": "admin"
                    }
                ]
            }
        }
    ],
    "related_apps": [
        "dbt",
        "postgresql",
        "airflow",
        "docker",
        "vscode",
        "chromium",
        "terminal"
    ],
    "tags": [
        "cli+gui",
        "data_orchestration",
        "verbose"
    ],
    "action_number": 9,
    "evaluator": {
        "func": "check_include_exclude",
        "result": {
            "type": "vm_script_output",
            "src": "evaluation_examples/examples/airflow/dd8980f3-3297-427f-8daf-4b46604c5a10/eval.sh",
            "dest": "/home/user/eval.sh"
        },
        "expected": {
            "type": "rule",
            "rules": {
                "include": [
                    "succeed"
                ],
                "exclude": [
                    "failed"
                ]
            }
        }
    },
    "counterpart": "a02a58d9-f52f-586e-b121-6f49f934b90e"
}