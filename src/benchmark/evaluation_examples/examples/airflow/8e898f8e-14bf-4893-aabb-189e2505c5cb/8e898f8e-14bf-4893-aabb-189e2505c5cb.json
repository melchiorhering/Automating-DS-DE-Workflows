{
    "id": "8e898f8e-14bf-4893-aabb-189e2505c5cb",
    "snapshot": "airflow",
    "instruction": "I am using Astronomer to deploy Airflow. I want to use 'wttr.in' api in dag task to get HongKong's weather information.  I've already finish setting http operator for my dag 'weather_data_dag', please set api connection on astro website. Please be noted that the connection id is http_weather_service, connection type is HTTP, host is 'wttr.in' with schema 'https'. Trigger the dag once you finish.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nI am using Astronomer to deploy Airflow\nTo build a connection on Airflow and trigger the dag, we can follow the setps:\n1. On the opened airflow web page, click the \"Admin\" button in the top menu bar of the web page;\n2. Select \"Connections\" from the drop-down menu;\n3. In the new page, click the blue button \"+\" below the search bar to create new Connection;\n4. In the window \"Add Connection\", firstly set the category to \"HTTP\";\n5. Next, type in values from config.yaml into the corresponding fields in the form:\n   Connection id: http_weather_service, \n   Host: 'wttr.in', \n   Schema: 'https'\n6. After filling these fields, click the button \"Save\" at the bottom of the web page;\n7. Then, we will see a new line with name \"http_weather_service\" in the connection panel.\n8. On the Airflow web page, find 'weather_data_dag' in the DAG list and click the slider to the left of the name to Unpause dag; \n9. Click the triangle under the Action column on the far right of the row to trigger the dag; \n10. Wait until the status of all tasks in the 'Runs' column to change to \"success\" or \"failed\".\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.astronomer.io/learn/connections"
    ],
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/8e898f8e-14bf-4893-aabb-189e2505c5cb/weather.zip",
                "dest": "/home/user/weather.zip"
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/8e898f8e-14bf-4893-aabb-189e2505c5cb/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "urls": [
                    "https://www.bing.com/"
                ]
            }
        },
        {
            "type": "astro_webui_init",
            "parameters": {
                "listening_port": 9222,
                "url": "http://localhost:8080",
                "actions": [
                    {
                        "type": "login",
                        "username": "admin",
                        "password": "admin"
                    }
                ]
            }
        }
    ],
    "action_number": 13,
    "related_apps": [
        "airflow",
        "chromium"
    ],
    "tags": [
        "cli+gui",
        "data_orchestration",
        "verbose"
    ],
    "evaluator": {
        "func": "check_include_exclude",
        "result": {
            "type": "vm_script_output",
            "src": "evaluation_examples/examples/airflow/8e898f8e-14bf-4893-aabb-189e2505c5cb/eval.sh",
            "dest": "/home/user/eval.sh"
        },
        "expected": {
            "type": "rule",
            "rules": {
                "include": [
                    "succeed"
                ],
                "exclude": [
                    "failed"
                ]
            }
        }
    },
    "counterpart": "73ef8c87-168d-4c55-b3d6-9a864ef27cb1"
}