Documentation Source:
cloud.google.com/bigquery/docs/geospatial-get-started.txt

Documentation Title:
Get started with geospatial analytics  |  BigQuery  |  Google Cloud

Documentation Content:
Go to project selector
Make sure that billing is enabled for your Google Cloud project
.
In the Google Cloud console, on the project selector page,
        select or
create a Google Cloud project
.
Note
: If you don't plan to keep the
    resources that you create in this procedure, create a project instead of
    selecting an existing project. After you finish these steps, you can
    delete the project, removing all resources associated with the project.
Go to project selector
Make sure that billing is enabled for your Google Cloud project
.
BigQuery is automatically enabled in new projects.
  To activate BigQuery in an existing project, go to
Enable the BigQuery API.
Enable the API
Explore the sample data
This tutorial uses a dataset available through the
Google Cloud Public Dataset Program
.
A public dataset is any dataset that is stored in BigQuery and
made available to the general public. The
public datasets are datasets that BigQuery hosts for
you to access and integrate into your applications. Google pays for the storage
of these datasets and provides public access to the data via a
project
. You pay only for the queries that
you perform on the data (the first 1 TB per month is free, subject to
query pricing details
.)
The NYC Citi Bike Trips dataset
NYC Citi Bike Trips
Citi Bike is the nation's largest bike share program, with 10,000 bikes and 600
stations across Manhattan, Brooklyn, Queens, and Jersey City. This dataset
includes Citi Bike trips since Citi Bike launched in September 2013 and is
updated daily. The data is processed by Citi Bike to remove trips that are
taken by staff to service and inspect the system and any trips below 60
seconds in length, which are considered false starts.
You can start exploring this data in the BigQuery console by
viewing the details of the
citibike_stations
table:
Go to citibike_stations schema
Three columns in this table are relevant to this tutorial:
bike_stations.longitude
: the longitude of a station. The values are
valid WGS 84 longitudes in decimal degrees format.



Documentation Source:
cloud.google.com/bigquery/docs/geospatial-get-started.txt

Documentation Title:
Get started with geospatial analytics  |  BigQuery  |  Google Cloud

Documentation Content:
The query takes a moment to complete. After the query runs, your results
appear in the
Query results
pane.
Visualize the query results in Geo Viz
Next, you visualize your results using BigQuery Geo Viz: a
web tool for visualization of geospatial data in BigQuery using
Google Maps APIs.
Launch Geo Viz and authenticate
Before using Geo Viz, you must authenticate and grant access to data in
BigQuery.
To set up Geo Viz:
Open the Geo Viz web tool.
Open the Geo Viz web tool
You might need to enable cookies to authorize and use this tool.
Under step one,
Query
, click
Authorize
.
In the
Choose an account
dialog, click your Google Account.
In the access dialog, click
Allow
to give Geo Viz access to your
BigQuery data.
Run a GoogleSQL query on geospatial data
After you authenticate and grant access, the next step is to run the query in
Geo Viz.
To run the query:
For step one,
Select data
, enter your project ID in the
Project ID
field.
In the query window, enter the following GoogleSQL query.
-- Finds Citi Bike stations with > 30 bikes
SELECT
  ST_GeogPoint(longitude, latitude)  AS WKT,
  num_bikes_available
FROM
  `bigquery-public-data.new_york.citibike_stations`
WHERE num_bikes_available > 30
Click
Run
.
When the query completes, click
Show results
. You can also click step two
Define columns
.
This moves you to step two. In step two, for
Geometry column
, choose
WKT
. This plots the points corresponding to the bike stations on your
map.
Format your visualization
The Style section provides a list of visual styles for customization. Certain
properties apply only to certain types of data. For example,
circleRadius
affects only points.
Supported style properties include:
fillColor
. The fill color of a polygon or point. For example,
"linear" or "interval" functions can be used to map numeric values to a color
gradient.
fillOpacity
.



Documentation Source:
cloud.google.com/bigquery/docs/kmeans-tutorial.txt

Documentation Title:
Create a k-means model to cluster London bicycle hires dataset  |  BigQuery  |  Google Cloud

Documentation Content:
#standardSQL
WITH
hs AS (
SELECT
  h.start_station_name AS station_name,
  IF
  (EXTRACT(DAYOFWEEK
    FROM
      h.start_date) = 1
    OR EXTRACT(DAYOFWEEK
    FROM
      h.start_date) = 7,
    "weekend",
    "weekday") AS isweekday,
  h.duration,
  ST_DISTANCE(ST_GEOGPOINT(s.longitude,
      s.latitude),
    ST_GEOGPOINT(-0.1,
      51.5))/1000 AS distance_from_city_center
FROM
  `bigquery-public-data.london_bicycles.cycle_hire` AS h
JOIN
  `bigquery-public-data.london_bicycles.cycle_stations` AS s
ON
  h.start_station_id = s.id
WHERE
  h.start_date BETWEEN CAST('2015-01-01 00:00:00' AS TIMESTAMP)
  AND CAST('2016-01-01 00:00:00' AS TIMESTAMP) ),
stationstats AS (
SELECT
  station_name,
  isweekday,
  AVG(duration) AS duration,
  COUNT(duration) AS num_trips,
  MAX(distance_from_city_center) AS distance_from_city_center
FROM
  hs
GROUP BY
  station_name, isweekday )
SELECT
*
FROM
stationstats
ORDER BY
distance_from_city_center ASC
Query details
This query extracts data on cycle hires, including
start_station_name
, and
duration
and joins it against station information, including
distance-from-city-center
. Then, it computes attributes of
the station in
stationstats
, including the average duration of rides and the
number of trips, and passes through the station attribute
distance_from_city_center
.
This query uses the
WITH
clause
to define subqueries. The query also uses the
ST_DISTANCE
and
ST_GEOGPOINT
geospatial analytics functions. For more information about these functions, see
Geography
functions
. For more
information about geospatial analytics, see
Introduction to
geospatial analytics
.



Documentation Source:
cloud.google.com/bigquery/docs/kmeans-tutorial.txt

Documentation Title:
Create a k-means model to cluster London bicycle hires dataset  |  BigQuery  |  Google Cloud

Documentation Content:
Run the query
The following query compiles your training data, and is also used in the
CREATE MODEL
statement later in this tutorial.
To run the query:
Go to the
BigQuery
page.
Go to BigQuery
In the editor pane, run the following SQL statement:
WITH
  hs AS (
  SELECT
    h.start_station_name AS station_name,
    IF
    (EXTRACT(DAYOFWEEK
      FROM
        h.start_date) = 1
      OR EXTRACT(DAYOFWEEK
      FROM
        h.start_date) = 7,
      "weekend",
      "weekday") AS isweekday,
    h.duration,
    ST_DISTANCE(ST_GEOGPOINT(s.longitude,
        s.latitude),
      ST_GEOGPOINT(-0.1,
        51.5))/1000 AS distance_from_city_center
  FROM
    `bigquery-public-data.london_bicycles.cycle_hire` AS h
  JOIN
    `bigquery-public-data.london_bicycles.cycle_stations` AS s
  ON
    h.start_station_id = s.id
  WHERE
    h.start_date BETWEEN CAST('2015-01-01 00:00:00' AS TIMESTAMP)
    AND CAST('2016-01-01 00:00:00' AS TIMESTAMP) ),
  stationstats AS (
  SELECT
    station_name,
    isweekday,
    AVG(duration) AS duration,
    COUNT(duration) AS num_trips,
    MAX(distance_from_city_center) AS distance_from_city_center
  FROM
    hs
  GROUP BY
    station_name, isweekday )
SELECT
  *
FROM
  stationstats
ORDER BY
  distance_from_city_center ASC
When the query is complete, click the
Results
tab below the query text
area. The results tab shows the columns you queried that are used to train
your model:
station_name
,
duration
,
num_trips
,
distance_from_city_center
.
The results should look like the following.
BigQuery DataFrames
Before trying this sample, follow the BigQuery DataFrames
    setup instructions in the
BigQuery quickstart
    using BigQuery DataFrames
.



