Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
Click the
Test Connection
button to confirm things work end to end. If the connection looks good, save the configuration
by clicking the
Connect
button in the bottom right corner of the modal window:
Congratulations, you've just added a new data source in Superset!
Registering a new table
​
Now that you’ve configured a data source, you can select specific tables (called
Datasets
in Superset)
that you want exposed in Superset for querying.
Navigate to
Data ‣ Datasets
and select the
+ Dataset
button in the top right corner.
A modal window should pop up in front of you. Select your
Database
,
Schema
, and
Table
using the drop downs that appear. In the following example,
we register the
cleaned_sales_data
table from the
examples
database.
To finish, click the
Add
button in the bottom right corner. You should now see your dataset in the list of datasets.
Customizing column properties
​
Now that you've registered your dataset, you can configure column properties
for how the column should be treated in the Explore workflow:
Is the column temporal? (should it be used for slicing & dicing in time series charts?)
Should the column be filterable?
Is the column dimensional?
If it's a datetime column, how should Superset parse
the datetime format? (using the
ISO-8601 string pattern
)
Superset semantic layer
​
Superset has a thin semantic layer that adds many quality of life improvements for analysts.
The Superset semantic layer can store 2 types of computed data:
Virtual metrics: you can write SQL queries that aggregate values
from multiple column (e.g.
SUM(recovered) / SUM(confirmed)
) and make them
available as columns for (e.g.
recovery_rate
) visualization in Explore.
Aggregate functions are allowed and encouraged for metrics.
You can also certify metrics if you'd like for your team in this view.
Virtual calculated columns: you can write SQL queries that
customize the appearance and behavior
of a specific column (e.g.
CAST(recovery_rate) as float
).
Aggregate functions aren't allowed in calculated columns.



Documentation Source:
superset.apache.org/docs/using-superset/exploring-data/index.txt

Documentation Title:
Exploring Data in Superset | Superset

Documentation Content:
If you would like to make your dashboard available to other users, simply select Draft next to the
title of your dashboard on the top left to change your dashboard to be in Published state. You can
also favorite this dashboard by selecting the star.
Annotations
​
Annotations allow you to add additional context to your chart. In this section, we will add an
annotation to the Tutorial Line Chart we made in a previous section. Specifically, we will add the
dates when some flights were cancelled by the UK’s Civil Aviation Authority in response to the
eruption of the Grímsvötn volcano in Iceland (23-25 May 2011).
First, add an annotation layer by navigating to Manage ‣ Annotation Layers. Add a new annotation
layer by selecting the green plus sign to add a new record. Enter the name Volcanic Eruptions and
save. We can use this layer to refer to a number of different annotations.
Next, add an annotation by navigating to Manage ‣ Annotations and then create a new annotation by
selecting the green plus sign. Then, select the Volcanic Eruptions layer, add a short description
Grímsvötn and the eruption dates (23-25 May 2011) before finally saving.
Then, navigate to the line chart by going to Charts then selecting Tutorial Line Chart from the
list. Next, go to the Annotations and Layers section and select Add Annotation Layer. Within this
dialogue:
Name the layer as Volcanic Eruptions
Change the Annotation Layer Type to Event
Set the Annotation Source as Superset annotation
Specify the Annotation Layer as Volcanic Eruptions
Select
Apply
to see your annotation shown on the chart.
If you wish, you can change how your annotation looks by changing the settings in the Display
configuration section. Otherwise, select
OK
and finally
Save
to save your chart. If you keep
the default selection to overwrite the chart, your annotation will be saved to the chart and also
appear automatically in the Tutorial Dashboard.
Advanced Analytics
​
In this section, we are going to explore the Advanced Analytics feature of Apache Superset that
allows you to apply additional transformations to your data.



Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
CAST(recovery_rate) as float
).
Aggregate functions aren't allowed in calculated columns.
Creating charts in Explore view
​
Superset has 2 main interfaces for exploring data:
Explore
: no-code viz builder. Select your dataset, select the chart,
customize the appearance, and publish.
SQL Lab
: SQL IDE for cleaning, joining, and preparing data for Explore workflow
We'll focus on the Explore view for creating charts right now.
To start the Explore workflow from the
Datasets
tab, start by clicking the name
of the dataset that will be powering your chart.
You're now presented with a powerful workflow for exploring data and iterating on charts.
The
Dataset
view on the left-hand side has a list of columns and metrics,
scoped to the current dataset you selected.
The
Data
preview below the chart area also gives you helpful data context.
Using the
Data
tab and
Customize
tabs, you can change the visualization type,
select the temporal column, select the metric to group by, and customize
the aesthetics of the chart.
As you customize your chart using drop-down menus, make sure to click the
Run
button
to get visual feedback.
In the following screenshot, we craft a grouped Time-series Bar Chart to visualize
our quarterly sales data by product line just by clicking options in drop-down menus.
Creating a slice and dashboard
​
To save your chart, first click the
Save
button. You can either:
Save your chart and add it to an existing dashboard
Save your chart and add it to a new dashboard
In the following screenshot, we save the chart to a new "Superset Duper Sales Dashboard":
To publish, click
Save and goto Dashboard
.
Behind the scenes, Superset will create a slice and store all the information needed
to create your chart in its thin data layer
(the query, chart type, options selected, name, etc).
To resize the chart, start by clicking the Edit Dashboard button in the top right corner.
Then, click and drag the bottom right corner of the chart until the chart layout snaps
into a position you like onto the underlying grid.
Click
Save
to persist the changes.
Congrats! You’ve successfully linked, analyzed, and visualized data in Superset.



Documentation Source:
superset.apache.org/docs/faq/index.txt

Documentation Title:
FAQ | Superset

Documentation Content:
To get Superset to discover your new columns,
all you have to do is to go to
Data -> Datasets
, click the edit icon next to the dataset
whose schema has changed, and hit
Sync columns from source
from the
Columns
tab.
Behind the scene, the new columns will get merged. Following this, you may want to re-edit the
table afterwards to configure the Columns tab, check the appropriate boxes and save again.
What database engine can I use as a backend for Superset?
​
To clarify, the database backend is an OLTP database used by Superset to store its internal
information like your list of users and dashboard definitions. While Superset supports a
variety of databases as data
sources
,
only a few database engines are supported for use as the OLTP backend / metadata store.
Superset is tested using MySQL, PostgreSQL, and SQLite backends. It’s recommended you install
Superset on one of these database servers for production.  Installation on other OLTP databases
may work but isn’t tested.  It has been reported that
Microsoft SQL Server does
not
work as a Superset backend
. Column-store,
non-OLTP databases are not designed for this type of workload.
How can I configure OAuth authentication and authorization?
​
You can take a look at this Flask-AppBuilder
configuration example
.
Is there a way to force the dashboard to use specific colors?
​
It is possible on a per-dashboard basis by providing a mapping of labels to colors in the JSON
Metadata attribute using the
label_colors
key.
{
"label_colors": {
"Girls": "#FF69B4",
"Boys": "#ADD8E6"
}
}
Does Superset work with
[insert database engine here]
?
​
The
Connecting to Databases section
provides the best
overview for supported databases. Database engines not listed on that page may work too. We rely on
the community to contribute to this knowledge base.
For a database engine to be supported in Superset through the SQLAlchemy connector, it requires
having a Python compliant
SQLAlchemy dialect
as well
as a
DBAPI driver
defined. Database that have limited
SQL support may work as well.



