{
    "id": "2e79b094-6a67-462e-aecc-6f2067a1f611",
    "snapshot": "dbt",
    "instruction": "Configure the snapshot \"orders_snapshot.sql\" using \"timestamp\" strategy to detect row changes. Load the seeds, execute the models and take a snapshot at \"analytics.snapshots.orders_snapshot\". Then, replaced the staled seed \"raw_orders.csv\" with the up-to-date one I provided at Desktop. Reload the seeds, re-run the models and take a new snapshot so that the snapshot table is able to reflect this update.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nThis task requires you to utilize dbt snapshot to reflex the update of tables.\n1. Open ``snapshots/orders_snapshot.sql`` in VSCode editor.\n2. Add the following codes inside ``config()`` function to specify the snapshots.\n```sql\ntarget_schema='snapshots',\nunique_key='order_id',\nstrategy='timestamp',\nupdated_at='updated_at'\n```\n3. Switch to the terminal.\n4. Run ``dbt seed`` and ``dbt run`` to load the seeds, and execute the models.\n5. Run ``dbt snapshot`` to take a snapshot.\n6. Run ``mv /home/user/Desktop/raw_orders.csv seeds/raw_orders.csv`` to update the staled seed.\n7. Run ``dbt seed`` and ``dbt run`` to reload the seeds, and re-execute the models.\n8. Run ``dbt snapshot`` to take a new snapshot.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.getdbt.com/docs/build/snapshots"
    ],
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/dbt/2e79b094-6a67-462e-aecc-6f2067a1f611/analytics.zip",
                "dest": "/home/user/analytics.zip"
            }
        },
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/dbt/2e79b094-6a67-462e-aecc-6f2067a1f611/raw_orders.csv",
                "dest": "/home/user/Desktop/raw_orders.csv"
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/dbt/2e79b094-6a67-462e-aecc-6f2067a1f611/init.sh",
                "dest": "/home/user/init.sh"
            }
        }
    ],
    "action_number": 8,
    "related_apps": [
        "dbt",
        "duckdb",
        "vscode",
        "terminal"
    ],
    "tags": [
        "cli",
        "data_transformation",
        "verbose"
    ],
    "evaluator": {
        "func": "check_local_database",
        "result": {
            "type": "vm_file",
            "path": "/home/user/projects/analytics/analytics.duckdb",
            "dest": "analytics.duckdb"
        },
        "expected": {
            "type": "local_file",
            "path": "evaluation_examples/examples/dbt/2e79b094-6a67-462e-aecc-6f2067a1f611/analytics.gold.duckdb",
            "dest": "analytics.gold.duckdb"
        },
        "options": {
            "db_type": "duckdb",
            "check_type": [
                "table-schema-content"
            ],
            "table_targets": [
                "orders_snapshot"
            ],
            "schema_name": "snapshots"
        }
    },
    "counterpart": "7b81c78d-8c06-4820-bfee-614dd391c920"
}