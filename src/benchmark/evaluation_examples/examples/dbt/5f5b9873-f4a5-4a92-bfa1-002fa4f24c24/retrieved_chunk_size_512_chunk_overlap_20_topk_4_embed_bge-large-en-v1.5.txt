Documentation Source:
cloud.google.com/bigquery/docs/connect-to-sql.txt

Documentation Title:
Connect to Cloud SQL  |  BigQuery  |  Google Cloud

Documentation Content:
bq mk --connection --display_name='friendly name' --connection_type='CLOUD_SQL' \
  --properties='{"instanceId":"federation-test:us-central1:mytestsql","database":"mydatabase","type":"MYSQL"}' \
  --connection_credential='{"username":"myusername", "password":"mypassword"}' \
  --project_id=federation-test --location=us my_connection_id
API
Within the BigQuery Connection API, you can invoke
CreateConnection
within
the
ConnectionService
to instantiate a connection.  See the
client library page
for more details.
Java
Before trying this sample, follow the
Java
setup instructions in the
BigQuery quickstart using
            client libraries
.
        
      
      
  For more information, see the
BigQuery
Java
API
    reference documentation
.
To authenticate to BigQuery, set up Application Default Credentials.
      For more information, see
Set up authentication for client libraries
.
import com.google.cloud.bigquery.connection.v1.CloudSqlCredential;
import com.google.cloud.bigquery.connection.v1.CloudSqlProperties;
import com.google.cloud.bigquery.connection.v1.Connection;
import com.google.cloud.bigquery.connection.v1.CreateConnectionRequest;
import com.google.cloud.bigquery.connection.v1.LocationName;
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient;
import java.io.IOException;

// Sample to create a connection with cloud MySql database
public class CreateConnection {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.



Documentation Source:
cloud.google.com/bigquery/docs/oracle-transfer.txt

Documentation Title:
Schedule an Oracle transfer  |  BigQuery  |  Google Cloud

Documentation Content:
Set up an Oracle data transfer
Select one of the following options:
Console
In the Google Cloud console, go to the
BigQuery
page.
Go to BigQuery
Click
Data transfers
>
Create a transfer
.
In the
Source type
section, for
Source
, select
Oracle
.
In the
Transfer config name
section, for
Display name
, enter a
name for the transfer.
In the
Schedule options
section:
In the
Repeat frequency
list, select an option to specify how
often this transfer runs. To specify a custom repeat frequency,
select
Custom
. If you select
On-demand
, then this transfer
runs when you
manually trigger the transfer
.
If applicable, select either
Start now
or
Start at set time
and provide a start date and run time.
In the
Destination settings
section, for
Dataset
, select the
dataset you created to store your data.
In the
Data source details
section, do the following:
For
Network attachment
, select an existing network attachment or click
Create Network Attachment
.
For
Host
, enter the hostname or IP of the database.
For
Port
, enter the port number that the Oracle
database is using for incoming connections, such as
1520
.
For
Database name
, enter the name of the Oracle
database.
For
Connection type
, enter the connection URL type, either
SERVICE
,
SID
, or
TNS
.
For
Username
, enter the username of the user initiating the Oracle
database connection.
For
Password
, enter the password of the user initiating the Oracle
database connection.
For
Oracle objects to transfer
, click
BROWSE
to select any
tables to be transferred to the BigQuery destination
dataset.
You can also manually enter any objects to include in the
transfer in this field.
In the
Service Account
menu, select a
service account
associated with your Google Cloud project. The selected service
account must have the
required roles
to run this
transfer.
If you signed in with a
federated identity
,
then a service account is required to create a transfer.



Documentation Source:
cloud.google.com/bigquery/docs/connect-to-sql.txt

Documentation Title:
Connect to Cloud SQL  |  BigQuery  |  Google Cloud

Documentation Content:
String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    String connectionId = "MY_CONNECTION_ID";
    String database = "MY_DATABASE";
    String instance = "MY_INSTANCE";
    String instanceLocation = "MY_INSTANCE_LOCATION";
    String username = "MY_USERNAME";
    String password = "MY_PASSWORD";
    String instanceId = String.format("%s:%s:%s", projectId, instanceLocation, instance);
    CloudSqlCredential cloudSqlCredential =
        CloudSqlCredential.newBuilder().setUsername(username).setPassword(password).build();
    CloudSqlProperties cloudSqlProperties =
        CloudSqlProperties.newBuilder()
            .setType(CloudSqlProperties.DatabaseType.MYSQL)
            .setDatabase(database)
            .setInstanceId(instanceId)
            .setCredential(cloudSqlCredential)
            .build();
    Connection connection = Connection.newBuilder().setCloudSql(cloudSqlProperties).build();
    createConnection(projectId, location, connectionId, connection);
  }

  static void createConnection(
      String projectId, String location, String connectionId, Connection connection)
      throws IOException {
    try (ConnectionServiceClient client = ConnectionServiceClient.create()) {
      LocationName parent = LocationName.of(projectId, location);
      CreateConnectionRequest request =
          CreateConnectionRequest.newBuilder()
              .setParent(parent.toString())
              .setConnection(connection)
              .setConnectionId(connectionId)
              .build();
      Connection response = client.createConnection(request);
      System.out.println("Connection created successfully :" + response.getName());
    }
  }
}
Grant access to the service account
A
service account
is automatically created when you
create the first connection to Cloud SQL within the project.
The service account's name is
BigQuery Connection Service
Agent
. To get the service account ID,
view your connection details
. The service account ID is of the
following format:
service-
PROJECT_NUMBER
@gcp-sa-bigqueryconnection.iam.gserviceaccount.com
.
To connect to Cloud SQL, you must give the new connection read-only
access to Cloud SQL so that BigQuery can access files on
behalf of users.



Documentation Source:
cloud.google.com/bigquery/docs/connect-to-sql.txt

Documentation Title:
Connect to Cloud SQL  |  BigQuery  |  Google Cloud

Documentation Content:
The service account must have the following permissions:
cloudsql.instances.connect
cloudsql.instances.get
You can grant the service account associated with the connection the
Cloud SQL Client IAM role
(
roles/cloudsql.client
), which has these permissions assigned.
You can omit this step if the service account already has the required
permissions.
Console
Go to the
IAM & Admin
page.
Go to IAM & Admin
Click
person_add
Grant Access
.
The
Add principals
dialog opens.
In the
New principals
field, enter the service account name
BigQuery Connection Service Agent
or the service account ID taken from
the
connection information
.
In the
Select a role
field, select
Cloud SQL
, and then select
Cloud SQL Client
.
Click
Save
.
gcloud
Use the
gcloud projects add-iam-policy-binding
command:
gcloud projects add-iam-policy-binding
PROJECT_ID
--member=serviceAccount:
SERVICE_ACCOUNT_ID
--role=roles/cloudsql.client
Provide the following values:
PROJECT_ID
: Your Google Cloud project ID.
SERVICE_ACCOUNT_ID
: The service account ID taken
from the
connection information
.
Note:
For more information on how to grant and revoke IAM roles,
see
Manage access to projects, folders, and
organizations
.
Share connections with users
You can grant the following roles to let users query data and manage connections:
roles/bigquery.connectionUser
: enables users to use connections to connect
with external data sources and run queries on them.
roles/bigquery.connectionAdmin
: enables users to manage connections.
For more information about IAM roles and permissions in
BigQuery, see
Predefined roles and permissions
.
Select one of the following options:
Console
Go to the
BigQuery
page.
Go to BigQuery
Connections are listed in your project,
in a group called
External connections
.
In the
Explorer
pane, click your
project name
>
External connections
>
connection
.
In the
Details
pane, click
Share
to share a connection.
Then do the following:
In the
Connection permissions
dialog, share the
connection with other principals by adding or editing
principals.
Click
Save
.
bq
You cannot share a connection with the bq command-line tool.



