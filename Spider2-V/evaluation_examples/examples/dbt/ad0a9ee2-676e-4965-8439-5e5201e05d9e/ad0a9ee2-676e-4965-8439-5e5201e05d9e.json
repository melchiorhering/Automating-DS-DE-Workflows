{
    "id": "ad0a9ee2-676e-4965-8439-5e5201e05d9e",
    "snapshot": "dbt",
    "instruction": "Install dbt-cloud-cli from GitHub and extract the binary to the same folder as the dbt project \"analytics\". Follow the instruction \"Step 1: Install\" specified in the opened account profile page.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nThis task requires you to install dbt-cloud-cli from GitHub and extract it into the local project.\n1. On the opened page, click the button written \"Linux\", now you will see the detailed instruction on how to install dbt-cloud-cli for Linux.\n2. Right-click the blue hyperlink \"GitHub\".\n3. Click \"Open link in new window\" option. The GitHub release for dbt-cloud-cli will be opened in a new window.\n4. Select a distribution according to your own CPU architecture and click it. The download process will begin automatically.\n5. Wait until the download process completes, then click the cross button in the top right corner to close the window.\n6. Switch to the terminal by clicking the black screen icon in the leftmost panel.\n7. Let's say the name of your binary file is ``{distribution_name}``. Execute the command \"mv {distribution_name} projects/analytics\" in the terminal.\n8. Execute the command \"cd projects/analytics\" in the terminal to navigate into the project folder.\n9. Execute the command \"tar -xf {distribution_name}\" to extract the binary file.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.getdbt.com/docs/cloud/configure-cloud-cli"
    ],
    "related_apps": [
        "dbt_cloud",
        "chromium",
        "terminal"
    ],
    "tags": [
        "cli+gui",
        "account",
        "data_transformation",
        "verbose"
    ],
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/dbt/ad0a9ee2-676e-4965-8439-5e5201e05d9e/analytics.zip",
                "dest": "/home/user/analytics.zip"
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/dbt/ad0a9ee2-676e-4965-8439-5e5201e05d9e/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "full_screen": true
            }
        },
        {
            "type": "dbt_cloud_webui_login",
            "parameters": {
                "listening_port": 9222,
                "setting_file": "evaluation_examples/settings/dbt_cloud/settings.json",
                "goto_page": "cli_setup"
            }
        }
    ],
    "action_number": 9,
    "evaluator": {
        "func": "check_include_exclude",
        "result": {
            "type": "vm_script_output",
            "src": "evaluation_examples/examples/dbt/ad0a9ee2-676e-4965-8439-5e5201e05d9e/eval.sh",
            "dest": "/home/user/eval.sh"
        },
        "expected": {
            "type": "rule",
            "rules": {
                "include": [
                    "succeed"
                ],
                "exclude": [
                    "failed"
                ]
            }
        }
    },
    "counterpart": "a0105f8e-a3dc-4464-81c2-ab2f301e215f"
}