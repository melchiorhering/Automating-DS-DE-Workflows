{
    "id": "a35a36a6-c800-4afd-b532-cc8b14f28290",
    "snapshot": "airbyte",
    "instruction": "I want to create an airbyte connection from Postgres to Postgres using octavia command. The configurations are given in the opened file on the desktop. Please help me to finish this task.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nIn this task, we want to use Octavia CLI to import, edit, and apply Airbyte application configurations to replicate data from Postgres to Postgres: \n\n1. Switch to the terminal window;\n2. In the terminal, run the following commands to initiate octavia:\n```\noctavia init\noctavia generate source decd338e-5647-4c0b-adf4-da0e75f5a750 postgres\nnano sources/postgres/configuration.yaml\n```\n3. Edit the sources/postgres/configuration.yaml according to the config.json file opened in gedit to set up the source configurations and save the file. After that, the file content should be like:\n```\nresource_name: \"postgres\"\ndefinition_type: source\ndefinition_id: decd338e-5647-4c0b-adf4-da0e75f5a750\ndefinition_image: airbyte/source-postgres\ndefinition_version: 3.3.18\n\nconfiguration:\n  host: \"localhost\"\n  port: 2000\n  schemas: [\"public\"] \n  database: \"postgres\"\n  password: \"password\"\n  ssl_mode:\n    mode: \"disable\"\n  username: \"postgres\"\n  tunnel_method:\n    tunnel_method: \"NO_TUNNEL\"\n  jdbc_url_params: \"\"\n  replication_method:\n    method: \"Standard\"\n```\n4. In the terminal, run the following commands to initiate octavia:\n```\noctavia apply\n```\nAnd you should see \"ðŸŽ‰ - Successfully created postgres on your Airbyte instance!\" in the terimnal. Then you can check that the configuration is also available in the UI.\n5. After that, run in the terminal \n```\noctavia generate destination 25c5221d-dce2-4163-ade9-739ef790f503 postgres\nnano postgres destinations/postgres/configuration.yaml\n```\n6. Edit the destinations/postgres/configuration.yaml according to the config.json file to set up the destination configurations and save the file. The file content should look like:\n```\nresource_name: \"postgres\"\ndefinition_type: destination\ndefinition_id: 25c5221d-dce2-4163-ade9-739ef790f503\ndefinition_image: airbyte/destination-postgres\ndefinition_version: 2.0.4\n\nconfiguration:\n  ssl: false\n  host: \"localhost\"\n  port: 3000\n  schema: \"public\"\n  database: \"postgres\"\n  password: \"password\"\n  ssl_mode:\n    mode: \"disable\"\n  username: \"postgres\"\n  tunnel_method:\n    tunnel_method: \"NO_TUNNEL\"\n  jdbc_url_params: \"\"\n  raw_data_schema: \"\"\n  disable_type_dedupe: false\n```\n7. In the terminal, run the following commands to initiate octavia:\n```\noctavia apply\n```\nAnd you should see \"ðŸŽ‰ - Successfully created postgres on your Airbyte instance!\" in the terimnal. Then you can check that the configuration is also available in the UI;\n8. Then run \n```\noctavia generate connection --source sources/postgres/configuration.yaml --destination destinations/postgres/configuration.yaml postgres-to-postgres\nnano connections/postgres_to_postgres/configuration.yaml\n```\nin the terminal;\n9. Edit the connections/postgres_to_postgres/configuration.yaml according to the config.json file to set up the destination configurations and save the file. The file content should look like:\n```\ndefinition_type: connection\nresource_name: \"postgres-to-postgres\"\nsource_configuration_path: sources/postgres/configuration.yaml\ndestination_configuration_path: destinations/postgres/configuration.yaml\n\nconfiguration:\n  status: active\n  skip_reset: false\n  namespace_definition: source\n  namespace_format: \"${SOURCE_NAMESPACE}\"\n  prefix: \"\"\n  schedule_type: manual\n  sync_catalog:\n    streams:\n      - config:\n          alias_name: basic_file\n          cursor_field: []\n          destination_sync_mode: overwrite\n          primary_key:\n            - - id\n          selected: true\n          suggested: true\n          sync_mode: full_refresh\n        stream:\n          default_cursor_field: []\n          json_schema:\n            properties:\n              id:\n                airbyte_type: integer\n                type: number\n              name:\n                type: string\n            type: object\n          name: basic_file\n          namespace: public\n          source_defined_primary_key:\n            - - id\n          supported_sync_modes:\n            - full_refresh\n            - incremental\n```\n10. After that, run\n```\noctavia apply\n```\nYou should see \"ðŸŽ‰ - Successfully created postgres-to-bigquery on your Airbyte instance!\" in the terminal. Then you can check that the conncetion is created in the UI.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://airbyte.com/tutorials/version-control-airbyte-configurations"
    ],
    "related_apps": [
        "chromium",
        "airbyte",
        "docker",
        "postgresql"
    ],
    "tags": [
        "cli",
        "data_ingestion_and_integration",
        "verbose"
    ],
    "action_number": 10,
    "config": [
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/airbyte/a35a36a6-c800-4afd-b532-cc8b14f28290/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222
            }
        },
        {
            "type": "airbyte_webui_init",
            "parameters": {
                "listening_port": 9222,
                "url": "http://localhost:8000",
                "actions": [
                    {
                        "type": "login",
                        "email": "anonym@gmail.com",
                        "company": "ANONYM"
                    }
                ]
            }
        },
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/airbyte/a35a36a6-c800-4afd-b532-cc8b14f28290/config.json",
                "dest": "/home/user/Desktop/config.json"
            }
        },
        {
            "type": "launch",
            "parameters": {
                "command": [
                    "gedit",
                    "/home/user/Desktop/config.json"
                ]
            }
        }
    ],
    "evaluator": {
        "func": "check_include_exclude",
        "result": {
            "type": "vm_script_output",
            "src": "evaluation_examples/examples/airbyte/a35a36a6-c800-4afd-b532-cc8b14f28290/eval.sh",
            "dest": "/home/user/eval.sh"
        },
        "expected": {
            "type": "rule",
            "rules": {
                "include": [
                    "succeed"
                ],
                "exclude": [
                    "failed"
                ]
            }
        }
    },
    "counterpart": "d6d8fbd6-6f53-4c45-b86d-0781e1a2127e"
}