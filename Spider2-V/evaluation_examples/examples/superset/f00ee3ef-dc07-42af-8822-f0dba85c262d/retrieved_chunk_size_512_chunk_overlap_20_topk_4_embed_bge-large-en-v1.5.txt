Documentation Source:
superset.apache.org/docs/using-superset/exploring-data/index.txt

Documentation Title:
Exploring Data in Superset | Superset

Documentation Content:
By the
end of this section, you will have created a table that shows the monthly spend on flights for the
first six months, by department, by travel class.
Create a new chart by selecting
+ ‣ Chart
from the top right corner. Choose
tutorial_flights again as a datasource, then click on the visualization type to get to the
visualization menu. Select the
Pivot Table
visualization (you can filter by entering text in the
search box) and then
Create New Chart
.
In the
Time
section, keep the Time Column as Travel Date (this is selected automatically as we
only have one time column in our dataset). Then select Time Grain to be month as having daily data
would be too granular to see patterns from. Then select the time range to be the first six months of
2011 by click on Last week in the Time Range section, then in Custom selecting a Start / end of 1st
January 2011 and 30th June 2011 respectively by either entering directly the dates or using the
calendar widget (by selecting the month name and then the year, you can move more quickly to far
away dates).
Next, within the
Query
section, remove the default COUNT(
*
) and add Cost, keeping the default
SUM aggregate. Note that Apache Superset will indicate the type of the metric by the symbol on the
left hand column of the list (ABC for string, # for number, a clock face for time, etc.).
In
Group by
select
Time
: this will automatically use the Time Column and Time Grain
selections we defined in the Time section.
Within
Columns
, select first Department and then Travel Class. All set – let’s
Run Query
to
see some data!
You should see months in the rows and Department and Travel Class in the columns. Publish this chart
to your existing Tutorial Dashboard you created earlier.
Line Chart
​
In this section, we are going to create a line chart to understand the average price of a ticket by
month across the entire dataset.
In the Time section, as before, keep the Time Column as Travel Date and Time Grain as month but this
time for the Time range select No filter as we want to look at entire dataset.



Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
Click the
Test Connection
button to confirm things work end to end. If the connection looks good, save the configuration
by clicking the
Connect
button in the bottom right corner of the modal window:
Congratulations, you've just added a new data source in Superset!
Registering a new table
​
Now that you’ve configured a data source, you can select specific tables (called
Datasets
in Superset)
that you want exposed in Superset for querying.
Navigate to
Data ‣ Datasets
and select the
+ Dataset
button in the top right corner.
A modal window should pop up in front of you. Select your
Database
,
Schema
, and
Table
using the drop downs that appear. In the following example,
we register the
cleaned_sales_data
table from the
examples
database.
To finish, click the
Add
button in the bottom right corner. You should now see your dataset in the list of datasets.
Customizing column properties
​
Now that you've registered your dataset, you can configure column properties
for how the column should be treated in the Explore workflow:
Is the column temporal? (should it be used for slicing & dicing in time series charts?)
Should the column be filterable?
Is the column dimensional?
If it's a datetime column, how should Superset parse
the datetime format? (using the
ISO-8601 string pattern
)
Superset semantic layer
​
Superset has a thin semantic layer that adds many quality of life improvements for analysts.
The Superset semantic layer can store 2 types of computed data:
Virtual metrics: you can write SQL queries that aggregate values
from multiple column (e.g.
SUM(recovered) / SUM(confirmed)
) and make them
available as columns for (e.g.
recovery_rate
) visualization in Explore.
Aggregate functions are allowed and encouraged for metrics.
You can also certify metrics if you'd like for your team in this view.
Virtual calculated columns: you can write SQL queries that
customize the appearance and behavior
of a specific column (e.g.
CAST(recovery_rate) as float
).
Aggregate functions aren't allowed in calculated columns.



Documentation Source:
superset.apache.org/docs/using-superset/exploring-data/index.txt

Documentation Title:
Exploring Data in Superset | Superset

Documentation Content:
Click on the entry to
launch an Explore workflow using this dataset.
In this section, we'll create a table visualization
to show the number of flights and cost per travel class.
By default, Apache Superset only shows the last week of data. In our example, we want to visualize all
of the data in the dataset. Click the
Time ‣ Time Range
section and change
the
Range Type
to
No Filter
.
Click
Apply
to save.
Now, we want to specify the rows in our table by using the
Group by
option. Since in this
example, we want to understand different Travel Classes, we select
Travel Class
in this menu.
Next, we can specify the metrics we would like to see in our table with the
Metrics
option.
COUNT(*)
, which represents the number of rows in the table
(in this case, quantity of flights in each Travel Class)
SUM(Cost)
, which represents the total cost spent by each Travel Class
Finally, select
Run Query
to see the results of the table.
To save the visualization, click on
Save
in the top left of the screen. In the following modal,
Select the
Save as
option and enter the chart name as Tutorial Table (you will be able to find it again through the
Charts
screen, accessible in the top menu).
Select
Add To Dashboard
and enter
Tutorial Dashboard. Finally, select
Save & Go To Dashboard
.
Dashboard Basics
​
Next, we are going to explore the dashboard interface. If you’ve followed the previous section, you
should already have the dashboard open. Otherwise, you can navigate to the dashboard by selecting
Dashboards on the top menu, then Tutorial dashboard from the list of dashboards.
On this dashboard you should see the table you created in the previous section. Select
Edit
dashboard
and then hover over the table. By selecting the bottom right hand corner of the table
(the cursor will change too), you can resize it by dragging and dropping.
Finally, save your changes by selecting Save changes in the top right.
Pivot Table
​
In this section, we will extend our analysis using a more complex visualization, Pivot Table.



Documentation Source:
superset.apache.org/docs/using-superset/exploring-data/index.txt

Documentation Title:
Exploring Data in Superset | Superset

Documentation Content:
The three types of transformation are:
Setting up the base chart
In this section, we’re going to set up a base chart which we can then apply the different
Advanced
Analytics
features to. Start off by creating a new chart using the same
tutorial_flights
datasource and the
Line Chart
visualization type. Within the Time section, set the Time Range as
1st October 2011 and 31st October 2011.
Next, in the query section, change the Metrics to the sum of Cost. Select
Run Query
to show the
chart. You should see the total cost per day for each month in October 2011.
Finally, save the visualization as Tutorial Advanced Analytics Base, adding it to the Tutorial
Dashboard.
Rolling Mean
​
There is quite a lot of variation in the data, which makes it difficult to identify any trend. One
approach we can take is to show instead a rolling average of the time series. To do this, in the
Moving Average
subsection of
Advanced Analytics
, select mean in the
Rolling
box and
enter 7 into both Periods and Min Periods. The period is the length of the rolling period expressed
as a multiple of the Time Grain. In our example, the Time Grain is day, so the rolling period is 7
days, such that on the 7th October 2011 the value shown would correspond to the first seven days of
October 2011. Lastly, by specifying Min Periods as 7, we ensure that our mean is always calculated
on 7 days and we avoid any ramp up period.
After displaying the chart by selecting
Run Query
you will see that the data is less variable
and that the series starts later as the ramp up period is excluded.
Save the chart as Tutorial Rolling Mean and add it to the Tutorial Dashboard.
Time Comparison
​
In this section, we will compare values in our time series to the value a week before. Start off by
opening the Tutorial Advanced Analytics Base chart, by going to
Charts
in the top menu and then
selecting the visualization name in the list (alternatively, find the chart in the Tutorial
Dashboard and select Explore chart from the menu for that visualization).



