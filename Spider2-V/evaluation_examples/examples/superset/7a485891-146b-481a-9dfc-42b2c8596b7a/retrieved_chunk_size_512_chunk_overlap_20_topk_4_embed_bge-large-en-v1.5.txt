Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
CAST(recovery_rate) as float
).
Aggregate functions aren't allowed in calculated columns.
Creating charts in Explore view
​
Superset has 2 main interfaces for exploring data:
Explore
: no-code viz builder. Select your dataset, select the chart,
customize the appearance, and publish.
SQL Lab
: SQL IDE for cleaning, joining, and preparing data for Explore workflow
We'll focus on the Explore view for creating charts right now.
To start the Explore workflow from the
Datasets
tab, start by clicking the name
of the dataset that will be powering your chart.
You're now presented with a powerful workflow for exploring data and iterating on charts.
The
Dataset
view on the left-hand side has a list of columns and metrics,
scoped to the current dataset you selected.
The
Data
preview below the chart area also gives you helpful data context.
Using the
Data
tab and
Customize
tabs, you can change the visualization type,
select the temporal column, select the metric to group by, and customize
the aesthetics of the chart.
As you customize your chart using drop-down menus, make sure to click the
Run
button
to get visual feedback.
In the following screenshot, we craft a grouped Time-series Bar Chart to visualize
our quarterly sales data by product line just by clicking options in drop-down menus.
Creating a slice and dashboard
​
To save your chart, first click the
Save
button. You can either:
Save your chart and add it to an existing dashboard
Save your chart and add it to a new dashboard
In the following screenshot, we save the chart to a new "Superset Duper Sales Dashboard":
To publish, click
Save and goto Dashboard
.
Behind the scenes, Superset will create a slice and store all the information needed
to create your chart in its thin data layer
(the query, chart type, options selected, name, etc).
To resize the chart, start by clicking the Edit Dashboard button in the top right corner.
Then, click and drag the bottom right corner of the chart until the chart layout snaps
into a position you like onto the underlying grid.
Click
Save
to persist the changes.
Congrats! You’ve successfully linked, analyzed, and visualized data in Superset.



Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
Creating Your First Dashboard | Superset
Skip to main content
Documentation
Getting Started
FAQ
Community
Resources
GitHub
Slack
Mailing List
Stack Overflow
Get Started
Search
Introduction
Quickstart
Installation
Configuration
Using Superset
Creating Your First Dashboard
Exploring Data in Superset
Issue Codes
Contributing
Security
FAQ
API
Edit this page on GitHub
Using Superset
Creating Your First Dashboard
On this page
Creating Your First Dashboard
​
This section is focused on documentation for end-users who will be using Superset
for the data analysis and exploration workflow
(data analysts, business analysts, data
scientists, etc). In addition to this site,
Preset.io
maintains an updated set of end-user
documentation at
docs.preset.io
.
This tutorial targets someone who wants to create charts and dashboards in Superset. We’ll show you
how to connect Superset to a new database and configure a table in that database for analysis.
You’ll also explore the data you’ve exposed and add a visualization to a dashboard so that you get a
feel for the end-to-end user experience.
Connecting to a new database
​
Superset itself doesn't have a storage layer to store your data but instead pairs with
your existing SQL-speaking database or data store.
First things first, we need to add the connection credentials to your database to be able
to query and visualize data from it. If you're using Superset locally via
Docker compose
, you can
skip this step because a Postgres database, named
examples
, is included and
pre-configured in Superset for you.
Under the
+
menu in the top right, select Data, and then the
Connect Database
option:
Then select your database type in the resulting modal:
Once you've selected a database, you can configure a number of advanced options in this window,
or for the purposes of this walkthrough, you can click the link below all these fields:
Once you've clicked that link you only need to specify two things (the database name and SQLAlchemy URI):
As noted in the text below the form, you should refer to the SQLAlchemy documentation on
creating new connection URIs
for your target database.



Documentation Source:
superset.apache.org/docs/using-superset/exploring-data/index.txt

Documentation Title:
Exploring Data in Superset | Superset

Documentation Content:
Within Metrics, remove the default
COUNT(*)
metric and instead add
AVG(Cost)
, to show the mean value.
Next, select
Run Query
to show the data on the chart.
How does this look? Well, we can see that the average cost goes up in December. However, perhaps it
doesn’t make sense to combine both single and return tickets, but rather show two separate lines for
each ticket type.
Let’s do this by selecting Ticket Single or Return in the Group by box, and the selecting
Run
Query
again. Nice! We can see that on average single tickets are cheaper than returns and that the
big spike in December is caused by return tickets.
Our chart is looking pretty good already, but let’s customize some more by going to the Customize
tab on the left hand pane. Within this pane, try changing the Color Scheme, removing the range
filter by selecting No in the Show Range Filter drop down and adding some labels using X Axis Label
and Y Axis Label.
Once you’re done, publish the chart in your Tutorial Dashboard.
Markup
​
In this section, we will add some text to our dashboard. If you’re there already, you can navigate
to the dashboard by selecting Dashboards on the top menu, then Tutorial dashboard from the list of
dashboards. Got into edit mode by selecting
Edit dashboard
.
Within the Insert components pane, drag and drop a Markdown box on the dashboard. Look for the blue
lines which indicate the anchor where the box will go.
Now, to edit the text, select the box. You can enter text, in markdown format (see
this Markdown Cheatsheet
for
more information about this format). You can toggle between Edit and Preview using the menu on the
top of the box.
To exit, select any other part of the dashboard. Finally, don’t forget to keep your changes using
Save changes
.
Publishing Your Dashboard
​
If you have followed all of the steps outlined in the previous section, you should have a dashboard
that looks like the below. If you would like, you can rearrange the elements of the dashboard by
selecting
Edit dashboard
and dragging and dropping.



Documentation Source:
superset.apache.org/docs/using-superset/creating-your-first-dashboard/index.txt

Documentation Title:
Creating Your First Dashboard | Superset

Documentation Content:
Click the
Test Connection
button to confirm things work end to end. If the connection looks good, save the configuration
by clicking the
Connect
button in the bottom right corner of the modal window:
Congratulations, you've just added a new data source in Superset!
Registering a new table
​
Now that you’ve configured a data source, you can select specific tables (called
Datasets
in Superset)
that you want exposed in Superset for querying.
Navigate to
Data ‣ Datasets
and select the
+ Dataset
button in the top right corner.
A modal window should pop up in front of you. Select your
Database
,
Schema
, and
Table
using the drop downs that appear. In the following example,
we register the
cleaned_sales_data
table from the
examples
database.
To finish, click the
Add
button in the bottom right corner. You should now see your dataset in the list of datasets.
Customizing column properties
​
Now that you've registered your dataset, you can configure column properties
for how the column should be treated in the Explore workflow:
Is the column temporal? (should it be used for slicing & dicing in time series charts?)
Should the column be filterable?
Is the column dimensional?
If it's a datetime column, how should Superset parse
the datetime format? (using the
ISO-8601 string pattern
)
Superset semantic layer
​
Superset has a thin semantic layer that adds many quality of life improvements for analysts.
The Superset semantic layer can store 2 types of computed data:
Virtual metrics: you can write SQL queries that aggregate values
from multiple column (e.g.
SUM(recovered) / SUM(confirmed)
) and make them
available as columns for (e.g.
recovery_rate
) visualization in Explore.
Aggregate functions are allowed and encouraged for metrics.
You can also certify metrics if you'd like for your team in this view.
Virtual calculated columns: you can write SQL queries that
customize the appearance and behavior
of a specific column (e.g.
CAST(recovery_rate) as float
).
Aggregate functions aren't allowed in calculated columns.



