Documentation Source:
cloud.google.com/bigquery/docs/visualize-jupyter.txt

Documentation Title:
Visualize BigQuery data in Jupyter notebooks  |  Google Cloud

Documentation Content:
The output is similar to the following:
Query complete after 0.07s: 100%|██████████| 4/4 [00:00<00:00, 1440.60query/s]
Downloading: 100%|██████████| 41/41 [00:02<00:00, 20.21rows/s]
country_code      country_name    num_regions
0   TR  Turkey         81
1   TH  Thailand       77
2   VN  Vietnam        63
3   JP  Japan          47
4   RO  Romania        42
5   NG  Nigeria        37
6   IN  India          36
7   ID  Indonesia      34
8   CO  Colombia       33
9   MX  Mexico         32
10  BR  Brazil         27
11  EG  Egypt          27
12  UA  Ukraine        27
13  CH  Switzerland    26
14  AR  Argentina      24
15  FR  France         22
16  SE  Sweden         21
17  HU  Hungary        20
18  IT  Italy          20
19  PT  Portugal       20
20  NO  Norway         19
21  FI  Finland        18
22  NZ  New Zealand    17
23  PH  Philippines    17
...
Note:
Your results might differ from what is above as the
google_trends
dataset being queried is refreshed with new data on an ongoing basis.
In the next cell (below the output from the previous cell), enter the
following command to run the same query, but this time save the results to
a new pandas DataFrame that's named
regions_by_country
. You provide that
name by using an argument with the
%%bigquery
magic command.



Documentation Source:
cloud.google.com/bigquery/docs/visualize-jupyter.txt

Documentation Title:
Visualize BigQuery data in Jupyter notebooks  |  Google Cloud

Documentation Content:
To show a dataset's tables, views, and models, expand the dataset.
To open a summary description as a tab in JupyterLab, double-click a
table, view, or model.
Note:
On the summary description for a table, click the
Preview
tab to preview a table's data. The following image shows a preview of the
international_top_terms
table
found in the
google_trends
dataset in the
bigquery-public-data
project:
Query notebook data using the
%%bigquery
magic command
In this section, you write SQL directly in notebook cells and read data from
BigQuery into the Python notebook.
Magic commands that use a single or double percentage character (
%
or
%%
)
let you use minimal syntax to interact with BigQuery within the
notebook. The BigQuery client library for Python is automatically
installed in a managed notebooks instance. Behind the scenes, the
%%bigquery
magic
command uses the BigQuery client library for Python to run the
given query, convert the results to a pandas DataFrame, optionally save the
results to a variable, and then display the results.
Note
: As of version 1.26.0 of the
google-cloud-bigquery
Python package,
the
BigQuery Storage API
is used by default to download results from the
%%bigquery
magics.
To open a notebook file, select
File
>
New
>
Notebook
.
In the
Select Kernel
dialog, select
Python (Local)
, and then click
Select
.
Your new IPYNB file opens.
To get the number of regions by country in the
international_top_terms
dataset, enter the following statement:
%%bigquery
SELECT
  country_code,
  country_name,
  COUNT(DISTINCT region_code) AS num_regions
FROM
  `bigquery-public-data.google_trends.international_top_terms`
WHERE
  refresh_date = DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY)
GROUP BY
  country_code,
  country_name
ORDER BY
  num_regions DESC;
Click
play_circle_filled
Run cell
.



Documentation Source:
cloud.google.com/bigquery/docs/running-queries.txt

Documentation Title:
Run a query  |  BigQuery  |  Google Cloud

Documentation Content:
In the query editor, enter a valid GoogleSQL query.
For example, query the
BigQuery public dataset
usa_names
to determine the most common names in the United States between the
years 1910 and 2013:
SELECT
  name, gender,
  SUM(number) AS total
FROM
  `bigquery-public-data.usa_names.usa_1910_2013`
GROUP BY
  name, gender
ORDER BY
  total DESC
LIMIT
  10;
Click
settings
More
, and then
click
Query settings
.
In the
Resource management
section, select
Batch
.
Optional: Specify the destination table and
location
for the query results:
In the
Destination
section, select
Set a destination table for query results
.
For
Dataset
, enter the name of an existing dataset for the
destination table—for example,
myProject.myDataset
.
For
Table Id
, enter a name for the destination table—for
example,
myTable
.
If the destination table is an existing table, then for
Destination table write preference
, select whether to append or
overwrite the table with the query results.
If the destination table is a new table, then
BigQuery creates the table when you run your query.
In the
Additional settings
section, click the
Data location
menu, and then select an option.
In this example, the
usa_names
dataset is stored in the US
multi-region location. If you specify a destination table for this
query, the dataset that contains the destination table must also be
in the US multi-region. You cannot query a dataset in one location
and write the results to a table in another location.
Click
Save
.
Click
play_circle
Run
.
If you don't specify a destination table, the query job writes the
output to a temporary (cache) table.
Optional: To sort the query results by column, click
arrow_drop_down
Open sort menu
next to the column name and select a sort order. If the estimated bytes
processed for the sort is more than zero, then the number of bytes is
displayed at the top of the menu.
Optional: To see visualization of your query results, go to the
Chart
tab.



Documentation Source:
cloud.google.com/bigquery/docs/running-queries.txt

Documentation Title:
Run a query  |  BigQuery  |  Google Cloud

Documentation Content:
In the query editor, enter a valid GoogleSQL query.
For example, query the
BigQuery public dataset
usa_names
to determine the most common names in the United States between the
years 1910 and 2013:
SELECT
  name, gender,
  SUM(number) AS total
FROM
  `bigquery-public-data.usa_names.usa_1910_2013`
GROUP BY
  name, gender
ORDER BY
  total DESC
LIMIT
  10;
Optional: Specify the destination table and
location
for the query results:
In the query editor, click
settings
More
, and then
click
Query settings
.
In the
Destination
section, select
Set a destination table for query results
.
For
Dataset
, enter the name of an existing dataset for the
destination table—for example,
myProject.myDataset
.
For
Table Id
, enter a name for the destination table—for
example,
myTable
.
If the destination table is an existing table, then for
Destination table write preference
, select whether to append or
overwrite the table with the query results.
If the destination table is a new table, then
BigQuery creates the table when you run your query.
In the
Additional settings
section, click the
Data location
menu, and then select an option.
In this example, the
usa_names
dataset is stored in the US
multi-region location. If you specify a destination table for this
query, the dataset that contains the destination table must also be
in the US multi-region. You cannot query a dataset in one location
and write the results to a table in another location.
Click
Save
.
Click
play_circle
Run
.
If you don't specify a destination table, the query job writes the
output to a temporary (cache) table.
You can now explore the query results in the
Results
tab of the
Query results
pane.
Optional: To sort the query results by column, click
arrow_drop_down
Open sort menu
next to the column name and select a sort order. If the estimated bytes
processed for the sort is more than zero, then the number of bytes is
displayed at the top of the menu.



