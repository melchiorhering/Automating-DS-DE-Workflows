In this work, we are going to build an astro environment for airflow connecting to local postgres database. It includes:
1. Open the terminal and create a new file called `install.sh`:
```
cat > install.sh <<EOF
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
EOF
```
2. We already know the system password is `password`, enter `echo password | sudo -S bash install.sh` to set up Docker's apt repository.
3. Install the Docker packages with latest version:
`sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y`
4. To manage Docker as a non-root user, such that we can avoid typing sudo each time, we only need to add the current user to group `docker`. That is,
`sudo groupadd docker`
and
`sudo usermod -aG docker $USER`
5. We can activate the changes to groups right now:
`newgrp docker`
6. Now, we can test the installation via running:
`docker run hello-world`
7. To configure Docker to start on boot with systemd, execute:
`sudo systemctl enable docker.service`
and
`sudo systemctl enable containerd.service`
8. Next, we will install astro tool. Run this official command:
`curl -sSL install.astronomer.io | sudo bash -s`
9. As for postgresql, here is the script to install it:
`sudo apt-get install postgresql postgresql-contrib -y`
Eventually, we have finished all setups.