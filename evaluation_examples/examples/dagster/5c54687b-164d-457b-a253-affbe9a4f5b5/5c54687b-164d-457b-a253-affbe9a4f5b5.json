{
    "id": "5c54687b-164d-457b-a253-affbe9a4f5b5",
    "snapshot": "dagster",
    "instruction": "Create a partitioned dagster asset to retrieve information of the Astronomy Picture of the Day starting from April 1, 2024. Concretely, it saves the url of the high quality image to \"data/apod_url_YYYY-MM-DD.txt\", where YYYY-MM-DD should be replaced with the actual date (for API key, use DEMO_KEY is enough). Materialize the asset in the dagster UI from April 10, 2024 to April 13, 2024.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nI want to create a partitioned dagster asset to retrieve information of the Astronomy Picture of the Day. Please follow these steps:\n1. Switch to VS Code application.\n2. Click the folder \"apod_proj\" in the left EXPLORER panel and open the file \"assets.py\" in that folder.\n3. Define an asset in \"asset.py\" with the following code:\n```\nimport os\nimport urllib.request\nimport json\n\ndir_name = \"data\"\nif not os.path.exists(dir_name):\n    os.makedirs(dir_name)\n\nfrom dagster import AssetExecutionContext, DailyPartitionsDefinition, asset\n\n@asset(partitions_def=DailyPartitionsDefinition(start_date=\"2024-04-01\"))\ndef apod_asset(context: AssetExecutionContext) -> None:\n    partition_date_str = context.partition_key\n\n    url = f\"https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&date={partition_date_str}\"\n    target_location = f\"data/{partition_date_str}.json\"\n\n    urllib.request.urlretrieve(url, target_location)\n\n    with open(target_location) as f:\n        data = json.load(f)\n\n    with open(f\"data/apod_url_{partition_date_str}.txt\", \"w\") as f:\n        f.write(data[\"hdurl\"])\n```\n4. Save the asset file by pressing Ctrl+S.\n5. Go to Chromium and choose the tab with the Dagster UI.\n6. Click \"Reload all\" on the right part of the page.\n7. Click the link \"apod_proj\" in the table to open the project.\n8. If the asset `apod_asset` is not visible, click the row with text \"default\" to expand the asset list in the assets tab.\n9. Click \"apod_asset\" under the \"default\" table.\n10. You can now see the asset page of \"apod_asset\". Click \"Materialize...\" button at the top-right.\n11. Under \"Partition selection\" in the pop-up window, type in text \"[2024-04-10...2024-04-13]\" to overwrite the input box below.\n12. Click button \"Launch backfill\" at the bottom-right of the pop-up window to launch the runs.\n13. Navigate to Overview page via clicking button \"Overview\" on the top menu bar.\n14. Then, click button \"Backfills\" to explore the backfill table.\n15. Wait until the most recent entry in the table changes its \"Backfill status\" from \"In progress\" to \"Completed\".\n16. If there are any run errors, navigate to the \"Deployment\" page via clicking the button \"Deployment\" on the top menu bar, and then repeat steps 6-15 to launch the runs again.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.dagster.io/concepts/partitions-schedules-sensors/partitioning-assets"
    ],
    "related_apps": [
        "chromium",
        "dagster",
        "vscode"
    ],
    "tags": [
        "cli+gui",
        "data_orchestration",
        "verbose"
    ],
    "action_number": 16,
    "config": [
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/dagster/5c54687b-164d-457b-a253-affbe9a4f5b5/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "urls": [
                    "https://www.bing.com/"
                ]
            }
        },
        {
            "type": "dagster_webui_init",
            "parameters": {
                "listening_port": 9222,
                "url": "http://localhost:3000",
                "actions": [
                    {
                        "type": "close_popups"
                    }
                ]
            }
        }
    ],
    "evaluator": {
        "postconfig": [
            {
                "type": "copyfile_from_host_to_guest",
                "parameters": {
                    "src": "evaluation_examples/examples/dagster/5c54687b-164d-457b-a253-affbe9a4f5b5/gold_data.zip",
                    "dest": "/home/user/apod-proj/gold_data.zip"
                }
            }
        ],
        "func": [
            "check_include_exclude"
        ],
        "result": [
            {
                "type": "vm_script_output",
                "src": "evaluation_examples/examples/dagster/5c54687b-164d-457b-a253-affbe9a4f5b5/eval.sh",
                "dest": "/home/user/eval.sh"
            }
        ],
        "expected": [
            {
                "type": "rule",
                "rules": {
                    "include": [
                        "succeeded"
                    ],
                    "exclude": [
                        "failed"
                    ]
                }
            }
        ]
    },
    "counterpart": "cc95a46e-6902-43c3-988a-90e0306dd7b9"
}