{
    "id": "a31ed4e3-a098-4430-b94f-15ad3c2f3752",
    "snapshot": "snowflake",
    "instruction": "My work today is to load country data from an Amazon S3 bucket into snowflake and get items whose country_name is \"France\". Neither the database nor the schema is created. You can create and name them whatever you want. You must write a python worksheet to complete this task and download the query result, rename it to result.csv. You also need to create a python file code.py on the desktop and copy your python worksheet code to this file. The url of Amazon S3 bucket is \" s3://sfquickstarts/tastybytes/raw_pos/country/\" and the file format is csv. This csv file does not contain a header. The schema for the table is in the schema.txt file on the desktop.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nThis job is to create a new python worksheet on Snowflake and write python code to load data from Amazon S3 bucket and complete specific query task. In the opened Snowsight web page,\n1. Click \"Projects >> Worksheets\" on the left menu panel.\n2. Click \"+\" button on the right;\n3. In the drop-down menu, select \"Python Worksheet\".\n4. Copy the code below to the worksheet.\n```\nimport snowflake.snowpark as snowpark\nfrom snowflake.snowpark.functions import col\nfrom snowflake.snowpark.types import *\ndef main(session: snowpark.Session):\n    session.sql('CREATE OR REPLACE DATABASE tasty_food;').collect()\n    session.sql('CREATE OR REPLACE SCHEMA tasty_food.raw_pos;').collect()\n    session.sql('CREATE OR REPLACE STAGE tasty_food.public.stage url = \"s3://sfquickstarts/tastybytes/raw_pos/country/\" file_format = (type = csv);').collect()\n    country_schema = StructType([StructField(\"country_id\",IntegerType()),\\\n                     StructField(\"country_name\",StringType()),\\\n                     StructField(\"country_code1\",StringType()),\\\n                     StructField(\"country_code2\",StringType()),\\\n                     StructField(\"postal_code\",StringType()),\\\n                     StructField(\"city_name\",StringType()),\\\n                     StructField(\"size\",IntegerType())])\n    df_stage_read = session.read.schema(country_schema).csv('@tasty_food.public.stage')\n    df_stage_read.write.mode(\"overwrite\").save_as_table(\"tasty_food.raw_pos.country\")\n    df_country_query_result = session.table(\"tasty_food.raw_pos.country\").filter(col('country_name') == 'France')\n    return df_country_query_result\n```\n5. Click the \"Run\" button on the right-top of the worksheet.\n6. Click the \"Download Results\" button on the top-right of the result panel.\n7. In the drop-down menu, click \"Download as .csv\".\n8. In your virtual machine, navigate to the /home/user/Download directory.\n9. Rename the downloaded file to \"result.csv\".\n10. Open Terminal on your virtual machine.\n11. Run the following commands.\n```\ncd Desktop\ncode code.py\n```\n12. Copy the code in your python worksheet to code.py.\n13. Save code.py.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.snowflake.com/en/user-guide/tutorials/tasty-bytes-python-load"
    ],
    "related_apps": [
        "chromium",
        "snowflake",
        "terminal",
        "vscode"
    ],
    "tags": [
        "cli+gui",
        "account",
        "data_warehousing",
        "verbose"
    ],
    "action_number": 13,
    "config": [
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222
            }
        },
        {
            "type": "snowflake_init",
            "parameters": {
                "settings_file": "evaluation_examples/settings/snowflake/settings.json",
                "actions": [
                    {
                        "type": "delete_database"
                    }
                ]
            }
        },
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/snowflake/a31ed4e3-a098-4430-b94f-15ad3c2f3752/schema.txt",
                "dest": "/home/user/Desktop/schema.txt"
            }
        },
        {
            "type": "snowflake_login",
            "parameters": {
                "listening_port": 9222,
                "url": "https://app.snowflake.com",
                "settings_file": "evaluation_examples/settings/snowflake/settings.json"
            }
        }
    ],
    "evaluator": {
        "postconfig": [],
        "func": [
            "compare_csv",
            "check_file_existence"
        ],
        "result": [
            {
                "type": "vm_file",
                "path": "/home/user/Downloads/result.csv",
                "dest": "result.csv"
            },
            {
                "type": "vm_file",
                "path": "/home/user/Desktop/code.py",
                "dest": "code.py"
            }
        ],
        "expected": [
            {
                "type": "local_file",
                "path": "evaluation_examples/examples/snowflake/a31ed4e3-a098-4430-b94f-15ad3c2f3752/result_gold.csv",
                "dest": "result_gold.csv"
            },
            {}
        ]
    },
    "counterpart": "fc713066-100d-4317-8a6e-7c1ab902d64f"
}