{
    "id": "8ac84496-78ee-4c81-a637-fad9757afc46",
    "snapshot": "dagster",
    "instruction": "In the current dagster project, write an asset `iris_kmeans_notebook` to integrate the opened jupyter notebook. By the way, configure the data input of this notebook to be the existing asset \"iris_data\". Then, materialize all to conduct K-means classification on the Iris dataset.\nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nIn the current dagster project, write an asset `iris_kmeans_notebook` to integrate the opened jupyter notebook. By the way, configure the data input of this notebook to be the existing asset \\\"iris_data\\\". Then, materialize all to conduct K-means classification on the Iris dataset. To achieve this:\n1. Switch to VS Code editor. Open the folder \"iris_classification/assets\" in the left navbar.\n2. Open the file \"__init__.py\". Add the following code to the end of the file:\n```\niris_kmeans_notebook = define_dagstermill_asset(\n    name=\"iris_kmeans_notebook\",\n    notebook_path=file_relative_path(__file__, \"../notebooks/iris-kmeans-notebook.ipynb\"),\n    ins={\"iris\": AssetIn(\"iris_data\")},\n    group_name=\"classification\",\n)\n```\n3. Change to Chromium. Open the tab of the Jupyter Notebook \"iris-kmeans-notebook\". Select the block with comments \"# fetch the Iris dataset\".\n4. In the menu on the top, click \"View > Right Sidebar > Show Notebook Tools\" to open the notebook tools.\n5. Click \"COMMON TOOLS\" on the right sidebar to view the list of tools. Make sure the selected block is \"# fetch the Iris dataset\".\n6. Under \"Cell Tags\", click \"Add Tag\", and input \"parameters\" in the textbox. Press Enter to add the tag.\n7. Press Ctrl+S save the notebook. Then switch to the Dagster UI tab \"Asset Group: classification\".\n8. Click \"Reload definitions\" on the top-right of the page.\n9. After the asset \"iris_kmeans_notebook\" to appears in the lineage graph, click \"Materialize all\" on the top-right of the graph to materialize all assets. Wait for the run to complete.\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.dagster.io/integrations/dagstermill/using-notebooks-with-dagster"
    ],
    "related_apps": [
        "chromium",
        "dagster",
        "vscode",
        "jupyter"
    ],
    "tags": [
        "cli+gui",
        "data_orchestration",
        "verbose"
    ],
    "action_number": 9,
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/dagster/8ac84496-78ee-4c81-a637-fad9757afc46/iris-classification.zip",
                "dest": "/home/user/iris-classification.zip"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "urls": [
                    "https://www.bing.com/"
                ]
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/dagster/8ac84496-78ee-4c81-a637-fad9757afc46/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "dagster_webui_init",
            "parameters": {
                "listening_port": 9222,
                "url": "http://localhost:3000",
                "actions": [
                    {
                        "type": "close_popups"
                    }
                ]
            }
        }
    ],
    "evaluator": {
        "func": [
            "check_include_exclude"
        ],
        "result": [
            {
                "type": "vm_script_output",
                "src": "evaluation_examples/examples/dagster/8ac84496-78ee-4c81-a637-fad9757afc46/eval.sh",
                "dest": "/home/user/eval.sh"
            }
        ],
        "expected": [
            {
                "type": "rule",
                "rules": {
                    "include": [
                        "succeeded"
                    ],
                    "exclude": [
                        "failed"
                    ]
                }
            }
        ]
    },
    "counterpart": "02b1238f-efad-4076-9f47-d1144a02d23b"
}