Documentation Source:
docs.getdbt.com/guides/manual-install0c17.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
In the next steps, you will take a sample query and turn it into a model in your dbt project.
Checkout a new git branch
​
Check out a new git branch to work on new code:
Create a new branch by using the
checkout
command and passing the
-b
flag:
$
git
checkout
-b
add-customers-model
>
Switched to a new branch
`
add-customer-model
`
Build your first model
​
Open your project in your favorite code editor.
Create a new SQL file in the
models
directory, named
models/customers.sql
.
Paste the following query into the
models/customers.sql
file.
BigQuery
Databricks
Redshift
Snowflake
with
customers
as
(
select
id
as
customer_id
,
first_name
,
last_name
from
`
dbt-tutorial
`
.
jaffle_shop
.
customers
)
,
orders
as
(
select
id
as
order_id
,
user_id
as
customer_id
,
order_date
,
status
from
`
dbt-tutorial
`
.
jaffle_shop
.
orders
)
,
customer_orders
as
(
select
customer_id
,
min
(
order_date
)
as
first_order_date
,
max
(
order_date
)
as
most_recent_order_date
,
count
(
order_id
)
as
number_of_orders
from
orders
group
by
1
)
,
final
as
(
select
customers
.
customer_id
,
customers
.
first_name
,
customers
.
last_name
,
customer_orders
.
first_order_date
,
customer_orders
.
most_recent_order_date
,
coalesce
(
customer_orders
.



Documentation Source:
docs.getdbt.com/guides/manual-install121c.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
In the next steps, you will take a sample query and turn it into a model in your dbt project.
Checkout a new git branch
​
Check out a new git branch to work on new code:
Create a new branch by using the
checkout
command and passing the
-b
flag:
$
git
checkout
-b
add-customers-model
>
Switched to a new branch
`
add-customer-model
`
Build your first model
​
Open your project in your favorite code editor.
Create a new SQL file in the
models
directory, named
models/customers.sql
.
Paste the following query into the
models/customers.sql
file.
BigQuery
Databricks
Redshift
Snowflake
with
customers
as
(
select
id
as
customer_id
,
first_name
,
last_name
from
`
dbt-tutorial
`
.
jaffle_shop
.
customers
)
,
orders
as
(
select
id
as
order_id
,
user_id
as
customer_id
,
order_date
,
status
from
`
dbt-tutorial
`
.
jaffle_shop
.
orders
)
,
customer_orders
as
(
select
customer_id
,
min
(
order_date
)
as
first_order_date
,
max
(
order_date
)
as
most_recent_order_date
,
count
(
order_id
)
as
number_of_orders
from
orders
group
by
1
)
,
final
as
(
select
customers
.
customer_id
,
customers
.
first_name
,
customers
.
last_name
,
customer_orders
.
first_order_date
,
customer_orders
.
most_recent_order_date
,
coalesce
(
customer_orders
.



Documentation Source:
docs.getdbt.com/guides/manual-install8722.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
In the next steps, you will take a sample query and turn it into a model in your dbt project.
Checkout a new git branch
​
Check out a new git branch to work on new code:
Create a new branch by using the
checkout
command and passing the
-b
flag:
$
git
checkout
-b
add-customers-model
>
Switched to a new branch
`
add-customer-model
`
Build your first model
​
Open your project in your favorite code editor.
Create a new SQL file in the
models
directory, named
models/customers.sql
.
Paste the following query into the
models/customers.sql
file.
BigQuery
Databricks
Redshift
Snowflake
with
customers
as
(
select
id
as
customer_id
,
first_name
,
last_name
from
`
dbt-tutorial
`
.
jaffle_shop
.
customers
)
,
orders
as
(
select
id
as
order_id
,
user_id
as
customer_id
,
order_date
,
status
from
`
dbt-tutorial
`
.
jaffle_shop
.
orders
)
,
customer_orders
as
(
select
customer_id
,
min
(
order_date
)
as
first_order_date
,
max
(
order_date
)
as
most_recent_order_date
,
count
(
order_id
)
as
number_of_orders
from
orders
group
by
1
)
,
final
as
(
select
customers
.
customer_id
,
customers
.
first_name
,
customers
.
last_name
,
customer_orders
.
first_order_date
,
customer_orders
.
most_recent_order_date
,
coalesce
(
customer_orders
.



Documentation Source:
docs.getdbt.com/guides/manual-install5f72.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
In the next steps, you will take a sample query and turn it into a model in your dbt project.
Checkout a new git branch
​
Check out a new git branch to work on new code:
Create a new branch by using the
checkout
command and passing the
-b
flag:
$
git
checkout
-b
add-customers-model
>
Switched to a new branch
`
add-customer-model
`
Build your first model
​
Open your project in your favorite code editor.
Create a new SQL file in the
models
directory, named
models/customers.sql
.
Paste the following query into the
models/customers.sql
file.
BigQuery
Databricks
Redshift
Snowflake
with
customers
as
(
select
id
as
customer_id
,
first_name
,
last_name
from
`
dbt-tutorial
`
.
jaffle_shop
.
customers
)
,
orders
as
(
select
id
as
order_id
,
user_id
as
customer_id
,
order_date
,
status
from
`
dbt-tutorial
`
.
jaffle_shop
.
orders
)
,
customer_orders
as
(
select
customer_id
,
min
(
order_date
)
as
first_order_date
,
max
(
order_date
)
as
most_recent_order_date
,
count
(
order_id
)
as
number_of_orders
from
orders
group
by
1
)
,
final
as
(
select
customers
.
customer_id
,
customers
.
first_name
,
customers
.
last_name
,
customer_orders
.
first_order_date
,
customer_orders
.
most_recent_order_date
,
coalesce
(
customer_orders
.



