Documentation Source:
docs.getdbt.com/guides/manual-install5f72.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
You can always make it private later.
Leave the default values for all other settings.
Click
Create repository
.
Save the commands from "…or create a new repository on the command line" to use later in
Commit your changes
.
Create a project
​
Learn how to use a series of commands using the command line of the Terminal to create your project. dbt Core includes an
init
command that helps scaffold a dbt project.
To create your dbt project:
Make sure you have dbt Core installed and check the version using the
dbt --version
command:
dbt
--version
Initiate the
jaffle_shop
project using the
init
command:
dbt init jaffle_shop
Navigate into your project's directory:
cd
jaffle_shop
Use
pwd
to confirm that you are in the right spot:
$
pwd
>
Users/BBaggins/dbt-tutorial/jaffle_shop
Use a code editor like Atom or VSCode to open the project directory you created in the previous steps, which we named jaffle_shop. The content includes folders and
.sql
and
.yml
files generated by the
init
command.
The starter project in a code editor
dbt provides the following values in the
dbt_project.yml
file:
dbt_project.yml
name
:
jaffle_shop
# Change from the default, `my_new_project`
...
profile
:
jaffle_shop
# Change from the default profile name, `default`
...
models
:
jaffle_shop
:
# Change from `my_new_project` to match the previous value for `name:`
...
Connect to BigQuery
​
When developing locally, dbt connects to your
data warehouse
using a
profile
, which is a YAML file with all the connection details to your warehouse.
Create a file in the
~/.dbt/
directory named
profiles.yml
.
Move your BigQuery keyfile into this directory.
Copy the following and paste into the new profiles.yml file. Make sure you update the values where noted.



Documentation Source:
docs.getdbt.com/guides/manual-install0c17.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
You can always make it private later.
Leave the default values for all other settings.
Click
Create repository
.
Save the commands from "…or create a new repository on the command line" to use later in
Commit your changes
.
Create a project
​
Learn how to use a series of commands using the command line of the Terminal to create your project. dbt Core includes an
init
command that helps scaffold a dbt project.
To create your dbt project:
Make sure you have dbt Core installed and check the version using the
dbt --version
command:
dbt
--version
Initiate the
jaffle_shop
project using the
init
command:
dbt init jaffle_shop
Navigate into your project's directory:
cd
jaffle_shop
Use
pwd
to confirm that you are in the right spot:
$
pwd
>
Users/BBaggins/dbt-tutorial/jaffle_shop
Use a code editor like Atom or VSCode to open the project directory you created in the previous steps, which we named jaffle_shop. The content includes folders and
.sql
and
.yml
files generated by the
init
command.
The starter project in a code editor
dbt provides the following values in the
dbt_project.yml
file:
dbt_project.yml
name
:
jaffle_shop
# Change from the default, `my_new_project`
...
profile
:
jaffle_shop
# Change from the default profile name, `default`
...
models
:
jaffle_shop
:
# Change from `my_new_project` to match the previous value for `name:`
...
Connect to BigQuery
​
When developing locally, dbt connects to your
data warehouse
using a
profile
, which is a YAML file with all the connection details to your warehouse.
Create a file in the
~/.dbt/
directory named
profiles.yml
.
Move your BigQuery keyfile into this directory.
Copy the following and paste into the new profiles.yml file. Make sure you update the values where noted.



Documentation Source:
docs.getdbt.com/guides/manual-install121c.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
You can always make it private later.
Leave the default values for all other settings.
Click
Create repository
.
Save the commands from "…or create a new repository on the command line" to use later in
Commit your changes
.
Create a project
​
Learn how to use a series of commands using the command line of the Terminal to create your project. dbt Core includes an
init
command that helps scaffold a dbt project.
To create your dbt project:
Make sure you have dbt Core installed and check the version using the
dbt --version
command:
dbt
--version
Initiate the
jaffle_shop
project using the
init
command:
dbt init jaffle_shop
Navigate into your project's directory:
cd
jaffle_shop
Use
pwd
to confirm that you are in the right spot:
$
pwd
>
Users/BBaggins/dbt-tutorial/jaffle_shop
Use a code editor like Atom or VSCode to open the project directory you created in the previous steps, which we named jaffle_shop. The content includes folders and
.sql
and
.yml
files generated by the
init
command.
The starter project in a code editor
dbt provides the following values in the
dbt_project.yml
file:
dbt_project.yml
name
:
jaffle_shop
# Change from the default, `my_new_project`
...
profile
:
jaffle_shop
# Change from the default profile name, `default`
...
models
:
jaffle_shop
:
# Change from `my_new_project` to match the previous value for `name:`
...
Connect to BigQuery
​
When developing locally, dbt connects to your
data warehouse
using a
profile
, which is a YAML file with all the connection details to your warehouse.
Create a file in the
~/.dbt/
directory named
profiles.yml
.
Move your BigQuery keyfile into this directory.
Copy the following and paste into the new profiles.yml file. Make sure you update the values where noted.



Documentation Source:
docs.getdbt.com/guides/manual-install8722.txt

Documentation Title:
Quickstart for dbt Core from a manual install | dbt Developer Hub

Documentation Content:
You can always make it private later.
Leave the default values for all other settings.
Click
Create repository
.
Save the commands from "…or create a new repository on the command line" to use later in
Commit your changes
.
Create a project
​
Learn how to use a series of commands using the command line of the Terminal to create your project. dbt Core includes an
init
command that helps scaffold a dbt project.
To create your dbt project:
Make sure you have dbt Core installed and check the version using the
dbt --version
command:
dbt
--version
Initiate the
jaffle_shop
project using the
init
command:
dbt init jaffle_shop
Navigate into your project's directory:
cd
jaffle_shop
Use
pwd
to confirm that you are in the right spot:
$
pwd
>
Users/BBaggins/dbt-tutorial/jaffle_shop
Use a code editor like Atom or VSCode to open the project directory you created in the previous steps, which we named jaffle_shop. The content includes folders and
.sql
and
.yml
files generated by the
init
command.
The starter project in a code editor
dbt provides the following values in the
dbt_project.yml
file:
dbt_project.yml
name
:
jaffle_shop
# Change from the default, `my_new_project`
...
profile
:
jaffle_shop
# Change from the default profile name, `default`
...
models
:
jaffle_shop
:
# Change from `my_new_project` to match the previous value for `name:`
...
Connect to BigQuery
​
When developing locally, dbt connects to your
data warehouse
using a
profile
, which is a YAML file with all the connection details to your warehouse.
Create a file in the
~/.dbt/
directory named
profiles.yml
.
Move your BigQuery keyfile into this directory.
Copy the following and paste into the new profiles.yml file. Make sure you update the values where noted.



