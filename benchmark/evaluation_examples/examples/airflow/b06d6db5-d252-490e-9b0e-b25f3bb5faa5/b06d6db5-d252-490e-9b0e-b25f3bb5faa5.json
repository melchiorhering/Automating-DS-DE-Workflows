{
    "id": "b06d6db5-d252-490e-9b0e-b25f3bb5faa5",
    "snapshot": "airflow",
    "instruction": "I am using Astronomer to deploy Airflow. I have just implemented several test functions and found several errors using pytest. I provide you with the test error logs in README.md, please check these logs, adjust my DAG file accordingly, then trigger the dag. \nHere is a step-by-step tutorial from an expert instructing you how to complete it:\nI am using Astronomer to deploy Airflow\nTo fix the dag according to given test log, we can follow the steps:\n1. Click the VS Code editor on the left panel or dock;\n2. According to the opened README.md file, we can extract the test log to alter the dag file accordingly;\n3. Switch to the dag file 'task_today.py' that is opened in VSCode;\n4. We'll now alter the dag file. Concretely, we will change the \"schedule\" in @dag field to \"daily\" and rearrange the tasks in order \"activity >> logged_activity >>  analyzed_activity \":\nˋˋˋ\n# ... Keep the original ˋtask_todayˋ codes\n@dag(\n    start_date=datetime(2024, 4, 1),\n    schedule=\"@daily\",\n    catchup=False,\n    tags=['bored_api', 'daily_activity']\n)\n\n# ... after the task definition codes\n\nactivity = fetch_activity()\nlogged_activity = log_activity(activity)\nanalyzed_activity = analyze_activity(activity)\nactivity >> logged_activity >>  analyzed_activity \nˋˋˋ\n5. Save the file content and click the Chromium on the left panel to switch to the opened airflow web page;\n6. On the Airflow web page, find \"task_today\" in the DAG list and click the slider to the left of the name to Unpause dag; \n7. Click the triangle under the Action column on the far right of the row to trigger the dag; \n8. Wait until the status of all tasks in the 'Runs' column to change to \"success\" or \"failed\"\nYou can exactly follow the detailed plan above or proactively tackle the task based on the real-time environment interaction by yourself.",
    "source": [
        "https://docs.astronomer.io/learn/testing-airflow#debug-interactively-with-dagtest"
    ],
    "config": [
        {
            "type": "copyfile_from_host_to_guest",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/b06d6db5-d252-490e-9b0e-b25f3bb5faa5/today_task.zip",
                "dest": "/home/user/today_task.zip"
            }
        },
        {
            "type": "script_and_execute",
            "parameters": {
                "src": "evaluation_examples/examples/airflow/b06d6db5-d252-490e-9b0e-b25f3bb5faa5/init.sh",
                "dest": "/home/user/init.sh"
            }
        },
        {
            "type": "google_chrome_browser",
            "parameters": {
                "debugging_port": 1337,
                "listening_port": 9222,
                "urls": [
                    "https://www.bing.com/"
                ]
            }
        },
        {
            "type": "astro_webui_init",
            "parameters": {
                "listening_port": 9222,
                "url": "http://localhost:8080",
                "actions": [
                    {
                        "type": "login",
                        "username": "admin",
                        "password": "admin"
                    }
                ]
            }
        }
    ],
    "action_number": 8,
    "related_apps": [
        "airflow",
        "chromium",
        "docker",
        "vscode"
    ],
    "tags": [
        "cli+gui",
        "data_orchestration",
        "verbose"
    ],
    "evaluator": {
        "func": "check_include_exclude",
        "result": {
            "type": "vm_script_output",
            "src": "evaluation_examples/examples/airflow/b06d6db5-d252-490e-9b0e-b25f3bb5faa5/eval.sh",
            "dest": "/home/user/eval.sh"
        },
        "expected": {
            "type": "rule",
            "rules": {
                "include": [
                    "succeed"
                ],
                "exclude": [
                    "failed"
                ]
            }
        }
    },
    "counterpart": "b146bec7-20ab-4565-83a9-7572ef3a9523"
}