Documentation Source:
cloud.google.com/bigquery/docs/connected-sheets.txt

Documentation Title:
Using Connected Sheets  |  BigQuery  |  Google Cloud

Documentation Content:
If you do not yet have a Google Cloud project that is set up for billing, follow
these steps:
Sign in to your Google Cloud account. If you're new to
        Google Cloud,
create an account
to evaluate how our products perform in
        real-world scenarios. New customers also get $300 in free credits to
        run, test, and deploy workloads.
In the Google Cloud console, on the project selector page,
        select or
create a Google Cloud project
.
Note
: If you don't plan to keep the
    resources that you create in this procedure, create a project instead of
    selecting an existing project. After you finish these steps, you can
    delete the project, removing all resources associated with the project.
Go to project selector
Make sure that billing is enabled for your Google Cloud project
.
In the Google Cloud console, on the project selector page,
        select or
create a Google Cloud project
.
Note
: If you don't plan to keep the
    resources that you create in this procedure, create a project instead of
    selecting an existing project. After you finish these steps, you can
    delete the project, removing all resources associated with the project.
Go to project selector
Make sure that billing is enabled for your Google Cloud project
.
BigQuery is automatically enabled in new projects.
  To activate BigQuery in a preexisting project, go to
Enable the BigQuery API.
Enable the API
When you finish this topic, you can avoid continued billing by deleting the
resources you created. See
Cleaning up
for more detail.
Open BigQuery datasets from Connected Sheets
The following example uses a public dataset to show you how to connect to
BigQuery from Google Sheets.
Create or open a Google Sheets spreadsheet.
Click
Data
, click
Data connectors
, and then click
Connect to
BigQuery
.
Note:
If you do not see the
Data connectors
option, see
Before you begin
.
Click
Get connected
.
Select a Google Cloud project that has billing enabled.
Click
Public datasets
.
In the search box, type
chicago
and then select the
chicago_taxi_trips
dataset.
Select the
taxi_trips
table and then click
Connect
.



Documentation Source:
cloud.google.com/bigquery/docs/samples/bigquery-query-external-sheets-perm.txt

Documentation Title:
Query Sheets with a permanent table  |  BigQuery  |  Google Cloud

Documentation Content:
# dataset_id = "your-project.your_dataset"

# Configure the external data source.
dataset = client.get_dataset(dataset_id)
table_id = "us_states"
schema = [
    bigquery.SchemaField("name", "STRING"),
    bigquery.SchemaField("post_abbr", "STRING"),
]
table = bigquery.Table(dataset.table(table_id), schema=schema)
external_config = bigquery.ExternalConfig("GOOGLE_SHEETS")
# Use a shareable link or grant viewing access to the email address you
# used to authenticate with BigQuery (this example Sheet is public).
sheet_url = (
    "https://docs.google.com/spreadsheets"
    "/d/1i_QCL-7HcSyUZmIbP9E6lO_T5u3HnpLe7dnpHaijg_E/edit?usp=sharing"
)
external_config.source_uris = [sheet_url]
options = external_config.google_sheets_options
assert options is not None
options.skip_leading_rows = 1  # Optionally skip header row.
options.range = (
    "us-states!A20:B49"  # Optionally set range of the sheet to query from.
)
table.external_data_configuration = external_config

# Create a permanent table linked to the Sheets file.
table = client.create_table(table)  # Make an API request.

# Example query to find states starting with "W".
sql = 'SELECT * FROM `{}.{}` WHERE name LIKE "W%"'.format(dataset_id, table_id)

results = client.query_and_wait(sql)  # Make an API request.

# Wait for the query to complete.
w_states = list(results)
print(
    "There are {} states with names starting with W in the selected range.".format(
        len(w_states)
    )
)
What's next
To search and filter code samples for other Google Cloud products, see the
Google Cloud sample browser
.
Except as otherwise noted, the content of this page is licensed under the
Creative Commons Attribution 4.0 License
, and code samples are licensed under the
Apache 2.0 License
. For details, see the
Google Developers Site Policies
. Java is a registered trademark of Oracle and/or its affiliates.



Documentation Source:
cloud.google.com/bigquery/docs/connected-sheets.txt

Documentation Title:
Using Connected Sheets  |  BigQuery  |  Google Cloud

Documentation Content:
hybrid, and multicloud
Industry solutions
Networking
Observability and monitoring
Security
Storage
Access and resources management
Cloud SDK, languages, frameworks, and tools
Costs and usage management
Infrastructure as code
Migration
Google Cloud Home
Free Trial and Free Tier
Architecture Center
Blog
Contact Sales
Google Cloud Developer Center
Google Developer Center
Google Cloud Marketplace (in console)
Google Cloud Marketplace Documentation
Google Cloud Skills Boost
Google Cloud Solution Center
Google Cloud Support
Google Cloud Tech Youtube Channel
Home
BigQuery
Documentation
Guides
Send feedback
Stay organized with collections
Save and categorize content based on your preferences.
Using Connected Sheets
With Connected Sheets, you can access, analyze, visualize, and share
billions of rows of BigQuery data from your Google Sheets
spreadsheet.
You can also do the following:
Collaborate with partners, analysts, or other stakeholders in a familiar
spreadsheet interface.
Ensure a single source of truth for data analysis without additional
spreadsheet exports.
Streamline your reporting and dashboard workflows.
Connected Sheets runs BigQuery queries on your
behalf either upon your request or on a defined schedule. Results of
those queries are saved in your spreadsheet for analysis and sharing.
Example use cases
The following are just a few use cases that show how
Connected Sheets lets you analyze large amounts of data within a
sheet, without needing to know SQL.
Business planning:
Build and prepare datasets, then allow others to find
insights from the data. For example, analyze sales data to determine which
products sell better in different locations.
Customer service:
Find out which stores have the most complaints per
10,000 customers.
Sales:
Create internal finance and sales reports, and share revenue
reports with sales reps.
Access control
Direct access to BigQuery datasets and tables is still controlled
within BigQuery. If you want to give a user Google Sheets access
only, share a spreadsheet and don't grant BigQuery access.
A user with Google Sheets-only access can perform analysis in the sheet and
use other Google Sheets features, but the user won't be able to perform the
following actions:
Manually refresh the BigQuery data in the sheet.
Schedule a refresh of the data in the sheet.



Documentation Source:
cloud.google.com/bigquery/docs/external-data-drive.txt

Documentation Title:
Create Google Drive external tables  |  BigQuery  |  Google Cloud

Documentation Content:
You can specify a sheet
name, or you can specify
sheet_name!top_left_cell_id:bottom_right_cell_id
for a cell range; for example, "Sheet1!A1:B20". If
Sheet range
is not
specified, the first sheet in the file is used.
On the
Create table
page, in the
Destination
section:
For
Dataset name
, choose the appropriate dataset, and in the
Table name
field, enter the name of the table you're creating in
BigQuery.
Verify that
Table type
is set to
External table
.
In the
Schema
section, enter the
schema
definition.
For JSON or CSV files, you can check the
Auto-detect
option to
enable schema
auto-detect
.
Auto-detect
is not available for Datastore exports,
Firestore exports, and Avro files. Schema information for these
file types is automatically retrieved from the self-describing source
data.
Enter schema information manually by:
Enabling
Edit as text
and entering the table schema as a JSON
array.
Note: You can view the schema of an existing table in JSON
format by entering the following command in the bq command-line tool:
bq show --format=prettyjson
DATASET
.
TABLE
.
Using
Add field
to manually input the schema.
Click
Create table
.
If necessary, select your account and then click
Allow
to give the
BigQuery client tools access to Drive.
You can then run a query against the table as if it were a standard
BigQuery table, subject to the
limitations
on external data sources.
After your query completes, you can download the results as CSV or JSON,
save the results as a table, or save the results to Sheets. See
Download, save, and export data
for more information.
bq
You create a table in the bq command-line tool using the
bq mk
command.



